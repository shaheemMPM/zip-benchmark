#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
PROJECT_ROOT="$(dirname "$(dirname "$SCRIPT_DIR")")"
IMPLEMENTATIONS_DIR="$PROJECT_ROOT/implementations"
RESULTS_DIR="$PROJECT_ROOT/benchmark/results"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
RUN_DIR="$RESULTS_DIR/run_$TIMESTAMP"
INPUT_DIR="$PROJECT_ROOT/common/test_data/sample_pdfs"

mkdir -p "$RUN_DIR"

all_implementations=("nodejs-jszip" "nodejs-7zip" "python-zipfile" "golang-archive-zip" "rust-zip-rs" "cpp-libzip" "java-util-zip")

calculate_total_input_size() {
    total_size=0
    for file in "$INPUT_DIR"/*.pdf; do
        file_size=$(wc -c < "$file")
        total_size=$((total_size + file_size))
    done
    echo $total_size
}

run_benchmark() {
    impl_dir="$1"
    impl_name="$2"
    echo "Running benchmark for $impl_name..."
    
    cd "$impl_dir"
    
    output_file="$RUN_DIR/${impl_name}_result.txt"
    
    { gtime -v ./benchmark; } &> "$output_file"
    
    memory_usage=$(grep "Maximum resident set size" "$output_file" | awk '{print $6 " KB"}')
    total_time=$(grep "Elapsed (wall clock) time" "$output_file" | awk '{print $8}')
    
    echo "Memory Usage: $memory_usage"
    echo "Total Time: $total_time"

    output_zip=$(ls -t ../../output/${impl_name}-*.zip | head -n1)
    if [ -f "$output_zip" ]; then
        output_size=$(wc -c < "$output_zip")
        input_size=$(calculate_total_input_size)
        compression_ratio=$(awk "BEGIN {printf \"%.2f\", (1 - $output_size / $input_size) * 100}")
        echo "Compression Ratio: $compression_ratio%"
        echo "Compression Ratio: $compression_ratio%" >> "$output_file"
    else
        echo "Output zip file not found. Compression ratio calculation skipped."
    fi
    
    echo "Benchmark for $impl_name completed."
    echo
}

print_usage() {
    echo "Usage: ./run [OPTIONS]"
    echo "Options:"
    echo "  all                   Run benchmarks for all implementations"
    echo "  <implementation list> Run benchmarks for specific implementations"
    echo ""
    echo "Available implementations:"
    for impl in "${all_implementations[@]}"; do
        echo "  $impl"
    done
}

if [ $# -eq 0 ]; then
    print_usage
    exit 1
fi

implementations_to_run=()
if [ "$1" = "all" ]; then
    implementations_to_run=("${all_implementations[@]}")
else
    for arg in "$@"; do
        if [[ " ${all_implementations[@]} " =~ " ${arg} " ]]; then
            implementations_to_run+=("$arg")
        else
            echo "Invalid implementation: $arg"
            print_usage
            exit 1
        fi
    done
fi

for impl in "${implementations_to_run[@]}"; do
    run_benchmark "$IMPLEMENTATIONS_DIR/$impl" "$impl"
done

echo "All benchmarks completed. Results are stored in $RUN_DIR"

python "$SCRIPT_DIR/generate_report.py" "$RUN_DIR"